There are some scripts helping you build the indy network with docker .

At first, we will build the test network and you wil know how to use the scripts.

(1)enter this file 

      RUN: cd start-local

(2)build a docker image with indy-startlocal.dockerfile
     
     RUN: docker build -f indy-startlocal.dockerfile -t indy_start .

(3)build  the container and find its name.
    
     RUN: docker run -itd -p 9701-9708:9701-9708 indy_start
     RUN: docker ps 
     
     Remember the names that shows.

(4)copy this folder into the container

     RUN: docker cp ../start-local/ {container's name}:/home/indy/start
   
(5)enter the container and enter the folder that we will use 

     RUN: docker exec -it {container's name} bash
     RUN: cd /home/indy/start

(6)init some nyms with init_nym.py.
      
     This script can generate the configure about nyms into the nym.config. 
     And th nym.config will be used to generate the domain_transactions_genesis.
     !!! Please remeber the first nym you generate must be a TRUSTEE.!!!
     If you want more information about this script, please run 
             python3 init_nym.py -h
     
     And now, we'll build the nyms that are in the test network.
    
    RUN: python3 init_nym.py --name Trustee --role TRUSTEE --seed 000000000000000000000000Trustee1
    
    Now ,it will generate a TRUSTEE into the nym.config. Please read it and remeber the parameter nym .
    Then ,we'll generate four STEWARDs.

    RUN: python3 init_nym.py --name Steward1 --role STEWARD --seed 000000000000000000000000Steward1 --fromnym V4SGRU86Z58d6TV7PBUe6f
    RUN: python3 init_nym.py --name Steward2 --role STEWARD --seed 000000000000000000000000Steward2 --fromnym V4SGRU86Z58d6TV7PBUe6f
    RUN: python3 init_nym.py --name Steward3 --role STEWARD --seed 000000000000000000000000Steward3 --fromnym V4SGRU86Z58d6TV7PBUe6f
    RUN: python3 init_nym.py --name Steward4 --role STEWARD --seed 000000000000000000000000Steward4 --fromnym V4SGRU86Z58d6TV7PBUe6f

    You can run vim nym.config , and find the configure.

(7)init the nodes' keys with init_node_keys_tofile.py.

    This script can generate the key file and its path is /var/lib/indy/sandbox/keys .
    And it will generate the key's information into the node.config ,it will be used to generate the pool_transactions_genesis.
    If you want more information about this script, please run
                 python3 init_node_keys_tofile.py -h

    RUN: python3 init_node_keys_tofile.py --name Node4 --seed 000000000000000000000000000Node4
    RUN: python3 init_node_keys_tofile.py --name Node3 --seed 000000000000000000000000000Node3
    RUN: python3 init_node_keys_tofile.py --name Node2 --seed 000000000000000000000000000Node2
    RUN: python3 init_node_keys_tofile.py --name Node1 --seed 000000000000000000000000000Node1

    You can vim node.config ,and find the configures. And you'd better read it and find the difference with the next.

(8) init the nodes' information with init_node_base.py.

    RUN: python3 init_node_base.py --name Node1 --fromnym Th7MpTaRZVRYnPiabds81Y --ip 127.0.0.1 --node_port 9701 --client_port 9702
    RUN: python3 init_node_base.py --name Node2 --fromnym EbP4aYNeTHL6q385GuVpRV --ip 127.0.0.1 --node_port 9703 --client_port 9704
    RUN: python3 init_node_base.py --name Node3 --fromnym 4cU41vWW82ArfxJxHkzXPG --ip 127.0.0.1 --node_port 9705 --client_port 9706 
    RUN: python3 init_node_base.py --name Node4 --fromnym TWwCRQRZ2ZHMJFn9TzLp7W --ip 127.0.0.1 --node_port 9707 --client_port 9708

    You can run vim node.config.

(9)generate pool_transactions_genesis and domain_transactions_genesis 
  
   RUN: python3 generate_domain_genesis.py 
   RUN: python3 generate_pool_genesis.py 

(10)start four nodes.

   RUN: /usr/bin/supervisord

   This command will run forever. So if you want to control the container, please run docker exec -it {container's name} bash.

(11)test the network with sdk.

   There are several sdks you can use and you can choose the language .

   Here are soma samples:

       1.a java sample(https://github.com/blokaly/indy-java-cli)
       2.offical sdk and samples (https://github.com/hyperledger/indy-sdk/)
   
   One import thing is that you need to change the ip in the genesis configure file. In this sample ,we use '127.0.0.1'.


Now if you want build the network in your way ,there are several place needed to change.

   (1)Using the indy-start-local.dockerfile instead and modify the the config in /etc/supervisord.conf
   
   (2)Every one who joins the network can generate the nym by using his own seed. So after generating the nyms, they need exchanging them and modify the nym.config by using vim. But everyone' s nym.config must be same and the first role must be TRUSTEE.
   
   (3)Using init_node_base.py and init_node_keys_tofile.py to generate the config and keys file for the node running in local. However, other node's config you need add them into the node.config by yourself.
   !!!One important thing is that you need to change the parameter islocal from 'True' to 'False'.
   
   (4)And then ,you can generate genesis file and test your network.



     

   



     





